<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:local="clr-namespace:BerryHomeController"
             x:Class="BerryHomeController.Common.Views.MainPage"
             xmlns:converter="clr-namespace:BerryHomeController.Common.Converters"
             xmlns:behaviors="clr-namespace:BerryHomeController.Common.Behaviors"
             x:Name="MainPageClass"
             Title="Devices">

    <ContentPage.Resources>
        <ResourceDictionary>
            <converter:BoolToStringConverter x:Key="BoolToString" />
            <converter:NullToVisibilityConverter x:Key="VisibilityConverter"/>
        </ResourceDictionary>
    </ContentPage.Resources>

    <ContentPage.ToolbarItems>
        <ToolbarItem Text="Add" Command="{Binding AddDeviceCommand}"/>
    </ContentPage.ToolbarItems>

    <ContentPage.Content>
        <ListView ItemsSource="{Binding Devices}" 
                  SelectionMode="Single" 
                  IsPullToRefreshEnabled="True" 
                  SelectedItem="{Binding SelectedDevice}"
                  RefreshCommand="{Binding RefreshDevicesCommand}"
                  IsRefreshing="{Binding IsRefreshing}">

            <ListView.Behaviors>
                <behaviors:EventToCommandBehavior 
                    EventName="ItemSelected" 
                    Command="{Binding Path=BindingContext.ExpandDeviceCommand, Source={x:Reference Name=MainPageClass}}"/>
            </ListView.Behaviors>

            <ListView.ItemTemplate>
                <DataTemplate>
                    <ViewCell>
                        <ViewCell.ContextActions>
                            <MenuItem Text="Remove" 
                                      Command="{Binding Path=BindingContext.RemoveDeviceCommand, Source={x:Reference Name=MainPageClass}}" 
                                      CommandParameter="{Binding Id}"/>
                        </ViewCell.ContextActions>

                        <Frame BorderColor="LightGray" HasShadow="True" Margin="10" CornerRadius="0">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="20"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="20"/>
                                    <RowDefinition Height="20"/>
                                    <RowDefinition Height="20"/>
                                    <RowDefinition Height="20"/>
                                    <RowDefinition Height="40"/>
                                </Grid.RowDefinitions>

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="100"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <!--<Image Grid.Column="0" Grid.Row="2" Grid.RowSpan="3"/>-->
                                <Switch Grid.Row="6" Grid.Column="2" IsToggled="{Binding State}">
                                    <Switch.Behaviors>
                                        <behaviors:EventToCommandBehavior 
                                            EventName="Toggled"
                                            Command="{Binding Path=BindingContext.SwitchDeviceCommand, Source={x:Reference Name=MainPageClass}}" 
                                            CommandParameter="{Binding Id}"/>
                                    </Switch.Behaviors>
                                </Switch>
                                <Label Grid.ColumnSpan="2"
                                       Grid.Column="0"
                                       Grid.Row="0"
                                       HorizontalOptions="CenterAndExpand"
                                       HorizontalTextAlignment="Center"
                                       Text="{Binding DeviceName}"/>
                                <StackLayout Grid.Column="1"
                                             Grid.Row="3"
                                             HorizontalOptions="StartAndExpand"
                                             Orientation="Horizontal">
                                    <Label Text="Status: "/>
                                    <Label>
                                        <Label.Style>
                                            <Binding Path="State">
                                                <Binding.Converter>
                                                    <converter:BoolToObjectConverter x:TypeArguments="Style">
                                                        <converter:BoolToObjectConverter.TrueObject>
                                                            <Style TargetType="Label">
                                                                <Setter Property="Text" Value="On"/>
                                                                <Setter Property="TextColor" Value="Green"/>
                                                            </Style>
                                                        </converter:BoolToObjectConverter.TrueObject>
                                                        <converter:BoolToObjectConverter.FalseObject>
                                                            <Style TargetType="Label">
                                                                <Setter Property="Text" Value="Off"/>
                                                                <Setter Property="TextColor" Value="Red"/>
                                                            </Style>
                                                        </converter:BoolToObjectConverter.FalseObject>
                                                    </converter:BoolToObjectConverter>
                                                </Binding.Converter>
                                            </Binding>
                                        </Label.Style>
                                    </Label>
                                </StackLayout>
                                <Label Grid.Row="4" Grid.Column="1" 
                                       Text="Active Since: " 
                                       IsVisible="{Binding State}"/>
                                    <!--TODO: Add some way to bind to last job.-->
                                <Label Grid.Row="5" Grid.Column="1" 
                                       Text="{Binding Path=Jobs[0].Start, StringFormat='Next Job: {0:DD/MM}'}" 
                                       IsVisible="{Binding Jobs, Converter={StaticResource VisibilityConverter}}"/>
                            </Grid>
                        </Frame>
                    </ViewCell>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
    </ContentPage.Content>

</ContentPage>
